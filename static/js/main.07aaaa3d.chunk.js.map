{"version":3,"sources":["components/GetAPI/index.js","components/Tmdb/index.js","components/MovieRow/index.js","components/Header/index.js","components/FeaturedMovie/index.js","components/InitialPage/index.js","components/FeaturedInfos/index.js","components/InfoPage/index.js","components/Routes/index.js","App.js","index.js"],"names":["Api","axios","create","baseURL","API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","src","listW","results","length","style","marginLeft","width","map","item","key","to","id","poster_path","alt","orignal_title","black","href","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","join","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","serie","created","created_by","InfoPage","state","trailer","url","location","pathname","separator","split","get","then","response","video","console","log","data","setState","catch","error","infoAboutVideos","this","frameborder","allow","allowfullscreen","Component","Rotas","exact","path","component","PaginaInicial","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07aaaa3d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst Api = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3'\r\n});\r\n\r\nconst API_KEY = '4fac81442e49a0849060733bebb2ac8a'\r\n\r\nexport { Api, API_KEY };","import { API_KEY } from '../GetAPI'\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\nconst basicFetch = async (endpoint) => {\r\n  const req = await fetch(`${API_BASE}${endpoint}`);\r\n  const json = await req.json()\r\n  return json\r\n}\r\n\r\n\r\nexport default {\r\n  getHomeList: async () => {\r\n    return [\r\n      {\r\n        slug: 'originals',\r\n        title: 'Originais do Netflix',\r\n        items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'trending',\r\n        title: 'Recomendados para Você',\r\n        items: await basicFetch(`/trending/tv/week?language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'toprated',\r\n        title: 'Em Alta',\r\n        items: await basicFetch(`/tv/top_rated?&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'animation',\r\n        title: 'Animação',\r\n        items: await basicFetch(`/discover/tv?with_genres=16&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'adventure',\r\n        title: 'Ação e Aventura',\r\n        items: await basicFetch(`/discover/tv?with_genres=10759&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'kids',\r\n        title: 'Infantil',\r\n        items: await basicFetch(`/discover/tv?with_genres=10762&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'reality',\r\n        title: 'Reality',\r\n        items: await basicFetch(`/discover/tv?with_genres=10764&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'scifi&fantasy',\r\n        title: 'Sci-Fi & Fantasia',\r\n        items: await basicFetch(`/discover/tv?with_genres=10765&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n    ];\r\n  },\r\n  getMovieInfo: async (movieId, type) => {\r\n    let info = {}\r\n\r\n    if (movieId) {\r\n      switch (type) {\r\n        case 'movie':\r\n          info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n          break;\r\n        case 'tv':\r\n          info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n\r\n          break;\r\n      }\r\n    }\r\n\r\n    return info\r\n  }\r\n}","import React, { useState } from 'react'\r\nimport './MovieRow.css'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default ({ title, items }) => {\r\n  const [scrollX, setScrollX] = useState(-400)\r\n\r\n  const handleLeftArrow = () => {\r\n    let x = scrollX + Math.round(window.innerWidth / 1.5)\r\n    if (x > 0) {\r\n      x = 0\r\n    }\r\n    setScrollX(x)\r\n  }\r\n\r\n  const handleRightArrow = () => {\r\n    let x = scrollX - Math.round(window.innerWidth / 1.5)\r\n\r\n    let listW = items.results.length * 150\r\n\r\n    if ((window.innerWidth - listW) > x) {\r\n      x = (window.innerWidth - listW) - 60\r\n    }\r\n\r\n    setScrollX(x)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"movieRow\">\r\n      <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n        <img src=\"https://img.icons8.com/ios-glyphs/60/ffffff/chevron-left.png\" />\r\n      </div>\r\n\r\n      <div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n        <img src=\"https://img.icons8.com/ios-glyphs/60/ffffff/chevron-right.png\" />\r\n      </div>\r\n\r\n      <h2>{title} </h2>\r\n      <div className=\"movieRow--listarea\">\r\n        <div className=\"movieRow--list\" style={{\r\n          marginLeft: scrollX,\r\n          width: items.results.length * 150\r\n        }}>\r\n          {items.results.length > 0 && items.results.map((item, key) => (\r\n\r\n            <Link to={`info-page/${item.id}`}>\r\n              <div key={key} className=\"movieRow--item\">\r\n                <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.orignal_title} />\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport './Header.css'\r\n\r\nexport default ({ black }) => {\r\n  return (\r\n    <header className={black ? 'black' : ''}>\r\n      <div className=\"header--logo\">\r\n        <a href=\"/\">\r\n          <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"netflix\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"header--user\">\r\n        <a href=\"/\">\r\n          <img src=\"https://yt3.ggpht.com/a/AATXAJzkjyPyw1fsZbqCc95v6GWiUJTgkS6ZU2d8XwN5=s900-c-k-c0xffffffff-no-rj-mo\" alt=\"\" />\r\n        </a>\r\n      </div>\r\n    </header >\r\n  )\r\n}","import React from 'react'\r\nimport './FeaturedMovie.css'\r\n\r\nexport default ({ item }) => {\r\n  let firstDate = new Date(item.first_air_date)\r\n  let genres = [];\r\n  for (let i in item.genres) {\r\n    genres.push(item.genres[i].name)\r\n  }\r\n\r\n  let description = item.overview;\r\n  if (description.length > 200) {\r\n    description = description.substring(0, 200) + '...'\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <section className=\"featured\" style={{\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n    }}>\r\n      <div className=\"featured--vertical\">\r\n        <div className=\"featured--horizontal\">\r\n          <div className=\"featured--name\">\r\n            {item.original_name}\r\n          </div>\r\n          <div className=\"featured--info\">\r\n            <div className=\"featured--points\">\r\n              {item.vote_average} pontos\r\n            </div>\r\n            <div className=\"featured--year\">\r\n              {firstDate.getFullYear()}\r\n            </div>\r\n            <div className=\"featured--seasons\">\r\n              {item.number_of_seasons} temporada\r\n              {item.number_of_seasons !== 1 ? 's' : ''}\r\n            </div>\r\n\r\n            <div className=\"featured--description\">{description}</div>\r\n            <div className=\"featured--buttons\">\r\n              <a href={`/watch/${item.id}`} className=\"featured--watchbutton\"> ▶ Assistir</a>\r\n              <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\"> + Minha Lista</a>\r\n            </div>\r\n            <div className=\"featured--genres\">\r\n              <strong>Gêneros:</strong>{genres.join(', ')}\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './App.css'\r\nimport Tmdb from '../Tmdb';\r\nimport MovieRow from '../MovieRow';\r\nimport Header from '../Header';\r\nimport FeaturedMovie from '../FeaturedMovie';\r\n\r\n\r\nexport default () => {\r\n  const [movieList, setMovieList] = useState([])\r\n  const [featuredData, setFeaturedData] = useState(null)\r\n  const [blackHeader, setBlackHeader] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const loadAll = async () => {\r\n      // Pegando lista total\r\n      let list = await Tmdb.getHomeList();\r\n\r\n      setMovieList(list)\r\n\r\n      // Pegando o featured\r\n\r\n      let originals = list.filter(i => i.slug === 'originals');\r\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\r\n      let chosen = originals[0].items.results[randomChosen]\r\n\r\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\r\n\r\n      setFeaturedData(chosenInfo)\r\n    }\r\n\r\n\r\n    loadAll()\r\n\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    const scrollListener = () => {\r\n      if (window.scrollY > 15) {\r\n        setBlackHeader(true);\r\n      } else {\r\n        setBlackHeader(false)\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', scrollListener)\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', scrollListener)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Header black={blackHeader} />\r\n\r\n      { featuredData &&\r\n        < FeaturedMovie item={featuredData} />\r\n      }\r\n\r\n      <section className=\"lists\">\r\n        {movieList.map((item, key) => (\r\n          <MovieRow key={key} title={item.title} items={item.items} />\r\n        ))}\r\n      </section>\r\n\r\n      { movieList.length <= 0 &&\r\n        <div className=\"loading\">\r\n          <img src=\"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2000,c_limit/Netflix_LoadTime.gif\" alt=\"loadig..\" />\r\n        </div>\r\n      }\r\n    </div>\r\n\r\n  )\r\n}","import React from 'react'\r\nimport './FeaturedInfos.css'\r\n\r\n\r\nexport default ({ serie }) => {\r\n  let firstDate = new Date(serie.first_air_date)\r\n  let genres = [];\r\n  for (let i in serie.genres) {\r\n    genres.push(serie.genres[i].name)\r\n  }\r\n  \r\n  let created = []\r\n  for (let i in serie.created_by) {\r\n    created.push(serie.created_by[i].name)\r\n  }\r\n  return (\r\n    <div>\r\n\r\n      <div className=\"info--title\">\r\n        <h1>{serie.name}</h1>\r\n      </div>\r\n\r\n      <section className=\"info--group\">\r\n\r\n        <div className=\"info--left\">\r\n          <div className=\"info--points\">\r\n            <h3 >{serie.vote_average} pontos</h3>\r\n          </div>\r\n\r\n          <div className=\"info--seasons\">\r\n            {serie.number_of_seasons} temporada\r\n             {serie.number_of_seasons !== 1 ? 's' : ''}\r\n          </div>\r\n\r\n          <div className=\"info--year\">\r\n            {firstDate.getFullYear()}\r\n          </div>\r\n          <div className=\"info--description\">\r\n            <p>{serie.overview}</p>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"info--right\">\r\n          <div className=\"info--genres\">\r\n            <strong>Gêneros: </strong>{genres.join(', ')}\r\n          </div>\r\n\r\n          <div className=\"info--creators\">\r\n            <strong>Criado por: </strong>{created.join(', ')}\r\n          </div>\r\n        </div>\r\n\r\n      </section>\r\n\r\n\r\n    </div >\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport Header from '../Header';\r\nimport FeaturedInfos from '../FeaturedInfos';\r\nimport { API_KEY, Api } from '../GetAPI'\r\nimport './InfoPage.css'\r\n\r\nclass InfoPage extends Component {\r\n  state = {\r\n    serie: [],\r\n    trailer: [],\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let url = window.location.pathname\r\n    let separator = url.split('/')\r\n    const id = separator[2]\r\n\r\n    await Api.get(`/tv/${id}/videos?api_key=${API_KEY}`).then((response) => {\r\n      const video = response\r\n      console.log(video.data.results)\r\n      this.setState({ trailer: video.data.results[0].key });\r\n    }).catch(error => { console.log(error) })\r\n\r\n    await Api.get(`/tv/${id}?language=pt-BR&api_key=${API_KEY}`).then((response) => {\r\n      const infoAboutVideos = response\r\n      this.setState({ serie: infoAboutVideos.data });\r\n    }).catch(error => { console.log(error) })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { serie } = this.state;\r\n    const { trailer } = this.state;\r\n\r\n    return (\r\n\r\n\r\n      <div >\r\n        <Header black={true} />\r\n        <div className=\"info--video\">\r\n          <iframe src={`https://www.youtube.com/embed/${trailer}?showinfo=0&rel=0&modestbranding=1&autoplay=1`} frameborder=\"0\" allow=\"accelerometer; autoplay=1; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n        </div>\r\n        <FeaturedInfos serie={serie} />\r\n\r\n      </div >\r\n\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default InfoPage;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport PaginaInicial from '../InitialPage';\r\nimport InfoPage from '../InfoPage';\r\n\r\nconst Rotas = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path='/Netflix-React-Clone' component={PaginaInicial} />\r\n      <Route path={`/info-page/`} component={InfoPage} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Rotas;","import React from 'react';\r\nimport './App.css';\r\nimport Rotas from './components/Routes';\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <Rotas />\r\n  </div>\r\n);\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}